;
; *****
; ***** ADS CP/M 8 INCH HARD DISK DRIVERS
; ***** TOM DE LELLIS
; ***** 9/15/86
; *****
;
	.Z80
	CSEG
;
	PUBLIC	DPHD0
	PUBLIC	DPHD1
	PUBLIC	DPHD2
	PUBLIC	DPHD3
	PUBLIC	DPHD4
;
	EXTRN	XTL00
	EXTRN	DIRBF
;
	EXTRN	HSTDSK
	EXTRN	HSTTRK
	EXTRN	HSTSEC
	EXTRN	HSTSIZ
	EXTRN	HSTBUF
	EXTRN	ERFLAG
	EXTRN	MPIOBST
;
DCTLR1	EQU	X'D8'			; CONTROL/STATUS
DDATA1	EQU	X'D9'			; DATA
;
DSLCT1	EQU	X'CC'			; SELECT CONTROLLER
;
RD	EQU	X'4E'			; READ
WR	EQU	X'47'			; WRITE
;
IRDY	EQU	X'01'			; READY FOR INPUT
ORDY	EQU	X'02'			; READY FOR OUTPUT
CBUSY	EQU	X'10'			; CONTROLLER BUSY
DREQ	EQU	X'20'
ATTN	EQU	X'80'			; ATTENTION
;
; *****
; ***** SELECT CONTROLLER
; *****
;
FLOGIN:
	IN	A,(DSLCT1)		; GET MPIO BOARS STATUS
	AND	X'F8'			; MASK OUT DRIVE SELECTS
	OR	X'04'			; OR IN HARD DISK BIT
	LD	(MPIOBST),A		; STORE NEW STATUS
	OUT	(DSLCT1),A		; SET IT
FLOGIN2:
	IN	A,(DCTLR1)		; GET DISK STATUS
	AND	CBUSY			; BUSY?
	JR	NZ,FLOGIN2		; WAIT IF SO
	RET				; EXIT
;
; *****
; ***** WRITE SECTOR
; *****
;
FWRITE:
	LD	B,WR			; WRITE
	CALL	CMD			; PUT COMMAND, SET BUFFER, SIZE, PORT
DWROL:
	IN	A,(DCTLR1)		; GET STATUS
	CPL				; INVERT
	AND	ATTN+DREQ		; ATTN OR DREQ?
	JR	Z,DWROL			; JUMP IF NEITHER
	AND	ATTN			; IF ATTN
	JR	NZ,WAIT			; JUMP
	OTIR				; OUT FIRST 256 BYTES
	OTIR				; OUT SECOND 256 BYTES
	JR	WAIT			; ELSE ERROR
;
; *****
; ***** READ SECTOR
; *****
;
FREAD:
	LD	B,RD			; READ COMMAND
	CALL	CMD			; START READ, SET BUFFER, SIZE, PORT
DRDIL:
	IN	A,(DCTLR1)		; GET STATUS BYTE
	CPL				; INVERT DATA
	AND	ATTN+DREQ		; CHECK ATTN OR IDAT
	JR	Z,DRDIL			; IF BOTH NEITHER ARE SET, SEE DRDIL
	AND	ATTN			; IS IT ATTN
	JR	NZ,WAIT			; IF SO, EXIT
	INIR				; GET FIRST 256 BYTES
	INIR				; GET SECOND 256 BYTES
;
; *****
; ***** WAIT FOR COMMAND COMPLETION
; *****
;
WAIT:
	IN	A,(DCTLR1)		; GET STATUS
	CPL				; INVERT
	AND	CBUSY			; BUSY?
	JR	Z,WAIT			; WAIT IF SO
WAIT1:
	IN	A,(DCTLR1)		; GET STATUS
	AND	IRDY			; INPUT READY?
	JR	NZ,WAIT1		; JUMP IF NOT
	IN	A,(DDATA1)		; READ TERM STATUS
	CPL				; INVERT
	OR	A			; CHECK IF 0
	LD	(ERFLAG),A		; SAY NO ERROR TO DEBLOCKER
	RET	Z			; EXIT IF NO ERROR
	CPL				; MAKE X'FF'
	LD	(ERFLAG),A		; SAY ERROR TO DEBLOCKER
	RET				; EXIT
;
; *****
; ***** SEND COMMAND TO CONTROLLER
; *****
;
CMD:
	LD	A,(HSTDSK)		; GET UNIT NUMBER
	RLA				; PUT
	RLA				;  DRIVE
	RLA				;   INTO
	RLA				;    HIGH NIBBLE
	AND	X'70'			; REMOVE ANY JUNK, ASSUME CTRLR 0
	LD	(FMPLIST+X'00'),A	; STORE IT
	LD	DE,(HSTTRK)		; GET TRACK
	LD	A,E			; LSB
	LD	(FMPLIST+X'01'),A	; STORE TRACK NUMBER
	LD	A,D			; MSB
	LD	(FMPLIST+X'02'),A	; STORE TRACK NUMBER
	LD	A,(HSTSEC)		; GET SECTOR NUMBER
	LD	(FMPLIST+X'03'),A	; STORE SECTOR
	CALL	WAITO			; WAIT FOR OUTPUT READY
	LD	A,B			; GET COMMAND
	CPL				; INVERT
	OUT	(DCTLR1),A		; SEND COMMAND TO CONTROLLER
	LD	B,6			; NUMBER OF PARAMETERS
	LD	HL,FMPLIST		; START OF LIST
CM10:
	CALL	WAITO			; WAIT FOR OUTPUT
	LD	A,(HL)			; GET PARAMETER
	CPL				; INVERT
	OUT	(DDATA1),A		; SEND IT
	INC	HL			; NEXT PARAMETER
	DJNZ	CM10			; PROCESS NEXT PARAMETER
	CALL	WAITO			; WAIT FOR OUTPUT READY
	OUT	(DDATA1),A		; GO BYTE
;
; *****
; ***** SETUP BUFFER, SIZE OR TRANSFER, DATA PORT
; *****
;
	LD	HL,HSTBUF		; SECTOR BUFFER ADDRESS
	LD	B,0			; LOAD 256
	LD	C,DDATA1		; DATA PORT
	RET				; DONE, RETURN TO CALLER
;
; *****
; ***** WAIT FOR OUTPUT READY
; *****
;
WAITO:
	IN	A,(DCTLR1)		; GET STATUS
	AND	ORDY			; WAIT FOR ORDY
	JR	NZ,WAITO		; JUMP IF BUSY
	RET				; EXIT
;
; *****
; ***** DISK PARAMETER HEADERS
; *****
;
	DSEG
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK E:
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY DISK ENRTY POINTS
	DEFW	FLOGIN
DPHD0:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	0000H,ALL00
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK F:
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY ENTRY POINTS
	DEFW	FLOGIN
DPHD1:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	0000H,ALL01
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK G:
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY DISK ENRTY POINTS
	DEFW	FLOGIN
DPHD2:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	0000H,ALL02
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK H:
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY ENTRY POINTS
	DEFW	FLOGIN
DPHD3:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	0000H,ALL03
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK I:
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY ENTRY POINTS
	DEFW	FLOGIN
DPHD4:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	0000H,ALL04
;
; *****
; ***** DPB FOR ADS 8 INCH HARD DRIVE
; *****
;
DPB00:
	DEFW	96			; SECTORS PER TRACK
	DEFB	5			; BLOCK SHIFT FACTOR
	DEFB	31			; BLOCK MASK
	DEFB	1			; EXTENT MASK
	DEFW	1737-1			; DISK STORAGE CAPACITY
	DEFW	768-1			; DIRECTORY ENTRIES
	DEFB	X'FC'			; ALLOCATION VECTOR SIZE
	DEFB	X'00'			; ALLOCATION VECTOR SIZE DIR BLOCK
	DEFW	0			; DIRECTORY CHECK SIZE
	DEFW	1			; RESERVED TRACKS AT BEGINNING OF DISK
;
; *****
; ***** FLOPPY DISK ALLOCATIONS
; *****
;
ALL00:
	DEFS	218			; ALLOCATION VECTOR 0
ALL01:
	DEFS	218			; ALLOCATION VECTOR 1
ALL02:
	DEFS	218			; ALLOCATION VECTOR 2
ALL03:
	DEFS	218			; ALLOCATION VECTOR 3
ALL04:
	DEFS	218			; ALLOCATION VECTOR 4
;
; *****
; ***** DISK CONTROLLER PARAMTER LIST
; *****
;
FMPLIST:
	DEFS	1			; HEAD/UNIT
	DEFS	1			; TRACK LSB
	DEFS	1			; TRACK MSB
	DEFS	1			; STARTING SECTOR
	DEFB	1			; SECTORS TO PROCESS
	DEFB	0			; AUX
;
	END
