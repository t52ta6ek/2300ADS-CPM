;
; *****
; ***** ADS CP/M 8 INCH FLOPPY DISK DRIVERS
; ***** TOM DE LELLIS
; ***** 9/16/86
; *****
;
	.Z80
	CSEG
;
	PUBLIC	XTL00
	PUBLIC	FMPLIST
;
	PUBLIC	DPHFP0
	PUBLIC	DPHFP1
	PUBLIC	DPHFP2
	PUBLIC	DPHFP3
;
	PUBLIC	DPB00
	PUBLIC	DPB01
;
	EXTRN	DIRBF
	EXTRN	UDSECBF
	EXTRN	UDUNIT
	EXTRN	UDTRACK
	EXTRN	UDSECTR
	EXTRN	DRVTYP
	EXTRN	MPIOBST
;
PTPS	EQU	77			; PHYSICAL TRACKS PER SIDE
;
DCTLR1	EQU	X'D8'			; CONTROL/STATUS
DDATA1	EQU	X'D9'			; DATA
;
DSLCT1	EQU	X'CC'			; SELECT CONTROLLER
;
RD	EQU	NOT X'86'		; READ
WR	EQU	NOT X'83'		; WRITE
S2M	EQU	X'80'			; SIDE 2 SELECT
;
ODAT	EQU	X'01'			; OUTPUT DATA MODE
ORDY	EQU	X'02'			; READY FOR OUTPUT
CBUSY	EQU	X'10'			; CONTROLLER BUSY
IRDY	EQU	X'20'			; READY FOR INPUT
IDAT	EQU	X'40'			; INPUT DATA MODE
ATTN	EQU	X'80'			; ATTENTION
;
SECSIZ	EQU	128			; SECTOR SIZE
;
; *****
; ***** SELECT CONTROLLER
; *****
;
FLOGIN:
	IN	A,(DSLCT1)		; GET MPIO DEVICE SELECT
	AND	X'F8'			; MASK OUT DRIVE SELECTS
	LD	B,A			; SAVE STATUS
	LD	A,(DRVTYP)		; GET CONTROLLER NUMBER
	RRA				; SHIFT
	RRA				;  INTO
	RRA				;   LOWER
	RRA				;    NIBBLE
	AND	X'03'			; SAVE FLOPPY CTRL BITS
	OR	B			; MERGE WITH CURRENT MPIO STATUS
	LD	(MPIOBST),A		; SAVE IT
	OUT	(DSLCT1),A		; SET IT
FLOGIN2:
	IN	A,(DCTLR1)		; DISK STATUS
	AND	CBUSY			; BUSY?
	JR	NZ,FLOGIN2		; JUMP IF SO
	RET				; EXIT
;
; *****
; ***** WRITE SECTOR
; *****
;
FWRITE:
	LD	B,WR			; WRITE
	CALL	CMD			; START WRITE, SET BUFFER, SIZE
DWROL:
	IN	A,(DCTLR1)		; GET STATUS
	CPL				; INVERT
	AND	ATTN+ODAT		; ATTN OR ODAT?
	JR	Z,DWROL			; EXIT IF NEITHER
	AND	ATTN			; ATTN?
	JR	NZ,WAIT			; EXIT IF ATTN
	LD	A,(HL)			; GET BYTE FROM BUFFER
	CPL				; INVERT
	OUT	(DDATA1),A		; OUTPUT DATA BYTE
	INC	HL			; NEXT BYTE
	DJNZ	DWROL			; UNTIL NO MORE BYTES TO PUT
	JR	CMDTRM			; HALT COMMAND AND EXIT
;
; *****
; ***** READ SECTOR
; *****
;
FREAD:
	LD	B,RD			; READ COMMAND
	CALL	CMD			; START READ, SET BUFFER, SIZE
DRDIL:
	IN	A,(DCTLR1)		; GET STATUS BYTE
	CPL				; INVERT DATA
	AND	ATTN+IDAT		; CHECK ATTN OR IDAT
	JR	Z,DRDIL			; IF BOTH NEITHER ARE SET, SEE DRDIL
	AND	ATTN			; IS IT ATTN
	JR	NZ,WAIT			; IF SO, EXIT
	IN	A,(DDATA1)		; READ BYTE OF DATA
	CPL				; SIGNALS ARE TRUE WHEN LOW SO INVERT
	LD	(HL),A			; AND MOVE DATA TO MEMORY
	INC	HL			; INCREMENT MEMORY POINTER
	DJNZ	DRDIL			; GET REST OF SECTOR
;
; *****
; ***** COMMAND TERMINATION
; *****
;
CMDTRM:
	IN	A,(DCTLR1)		; GET STATUS
	AND	ORDY			; WAIT FOR ORDY
	JR	NZ,CMDTRM		; IF OUPUT BUFFER FULL, WAIT
	LD	A,X'FF'			; LOAD TERMINATE
	OUT	(DCTLR1),A		; SEND TERM BYTE
;
; *****
; ***** WAIT FOR TERMINATION STATUS AND RETURN TO BIOS WITH STATUS
; *****
;
WAIT:
	IN	A,(DCTLR1)		; GET STATUS
	AND	CBUSY			; BUSY?
	JR	NZ,WAIT			; WAIT IF SO
WAIT1:
	IN	A,(DCTLR1)		; GET STATUS AGAIN
	AND	IRDY			; IRDY?
	JR	NZ,WAIT1		; JUMP IF NOT READY
	IN	A,(DDATA1)		; READ TERM STATUS
	CPL				; INVERT
	CP	2			; 0,1 OK
	LD	A,0			; OK STATUS
	RET	C			; RETURN JOB IS DONE CORRECTLY
	CPL				; SET ERROR EXIT STATUS
	RET				; EXIT
;
; *****
; ***** SEND COMMAND TO CONTROLLER
; *****
;
CMD:
	LD	A,(UDUNIT)		; GET UNIT NUMBER
	AND	X'03'			; KEEP UNIT NUMBER ONLY
	LD	(FMPLIST+X'00'),A	; STORE IT
	LD	A,(UDSECTR)		; GET SECTOR NUMBER
	LD	(FMPLIST+X'02'),A	; STORE SECTOR
	LD	A,(UDTRACK)		; GET TRACK
	CP	PTPS			; IS TRACK NUMBER > TRACKS AVAILABLE
	JR	C,FDP1			; JUMP IF NOT
	LD	A,(FMPLIST+X'00')	; ELSE GET UNIT NUMBER
	OR	S2M			; SELECT SECOND SIDE
	LD	(FMPLIST+X'00'),A	; STORE UNIT BACK
	LD	A,(UDTRACK)		; GET TRACK
	SUB	PTPS			; TRACK = TRACK - 77
FDP1:
	LD	(FMPLIST+X'01'),A	; STORE TRACK NUMBER
	CALL	WAITO			; WAIT FOR OUTPUT READY
	LD	A,B			; GET COMMAND
	OUT	(DCTLR1),A		; SEND COMMAND TO CONTROLLER
	LD	B,4			; NUMBER OF PARAMETERS
	LD	HL,FMPLIST		; START OF PARAM LIST
CM10:
	CALL	WAITO			; WAIT FOR OUTPUT READY
	LD	A,(HL)			; GET PARAMETER
	CPL				; INVERT
	OUT	(DDATA1),A		; PASS IT
	INC	HL			; NEXT PARAMETER
	DJNZ	CM10			; PROCESS NEXT PARAMETER
;
; *****
; ***** SET UP SECTOR BUFFER AND SIZE
; *****
;
	LD	HL,(UDSECBF)		; SECTOR BUFFER ADDRESS
	LD	B,SECSIZ		; NUMBER BYTES TO XFER
	RET				; DONE, RETURN TO CALLER
;
; *****
; ***** WAIT FOR OUTPUT READY
; *****
;
WAITO:
	IN	A,(DCTLR1)		; GET STATUS
	AND	ORDY			; WAIT FOR ORDY
	JR	NZ,WAITO		; JUMP IF NOT READY
	RET				; EXIT
;
; *****
; ***** DISK PARAMETER HEADERS
; *****
;
	DSEG
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK A: (DEFAULT SSDD)
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY DISK ENRTY POINTS
	DEFW	FLOGIN
DPHFP0:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	CHK00,ALL00
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK B: (DEFAULT SSDD)
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY ENTRY POINTS
	DEFW	FLOGIN
DPHFP1:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB00
	DEFW	CHK01,ALL01
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK C: (DEFAULT DSDD)
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY DISK ENRTY POINTS
	DEFW	FLOGIN
DPHFP2:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB01
	DEFW	CHK02,ALL02
;
; *****
; ***** DISK PARAMETER HEADER FOR DISK D: (DEFAULT DSDD)
; *****
;
	DEFW	FWRITE,FREAD		; FLOPPY ENTRY POINTS
	DEFW	FLOGIN
DPHFP3:
	DEFW	XTL00,0000H
	DEFW	0000H,0000H
	DEFW	DIRBF,DPB01
	DEFW	CHK03,ALL03
;
; *****
; ***** DPB FOR STANDARD ADS SSDD 8 INCH DRIVE
; *****
;
DPB00:
	DEFW	52			; SECTORS PER TRACK
	DEFB	4			; BLOCK SHIFT FACTOR
	DEFB	15			; BLOCK MASK
	DEFB	1			; EXTENT MASK
	DEFW	243-1			; DISK STORAGE CAPACITY
	DEFW	128-1			; DIRECTORY ENTRIES
	DEFB	X'C0'			; ALLOCATION VECTOR SIZE
	DEFB	X'00'			; ALLOCATION VECTOR SIZE
	DEFW	32			; DIRECTORY CHECK SIZE
	DEFW	2			; RESERVED TRACKS AT BEGINNING OF DISK
;
; *****
; ***** DPB FOR ADS DSDD 8 INCH DRIVE;
; *****
;
DPB01:
	DEFW	52			; SECTORS PER TRACK
	DEFB	4			; BLOCK SHIFT FACTOR
	DEFB	15			; BLOCK MASK
	DEFB	0			; EXTENT MASK
	DEFW	494-1			; DISK STORAGE CAPACITY
	DEFW	192-1			; DIRECTORY ENTRIES
	DEFB	X'E0'			; ALLOCATION VECTOR SIZE
	DEFB	X'00'			; ALLOCATION VECTOR SIZE
	DEFW	48			; DIRECTORY CHECK SIZE
	DEFW	2			; RESERVED TRACKS AT BEGINNING OF DISK
;
; *****
; ***** FLOPPY DISK CHECK VECTORS FOR REMOVABLE MEDIA
; ***** (RESERVE ENOUGH ROOM FOR DSDD DIRECTORY TOO)
; *****
;
CHK00:
	DEFS	48			; CHECK VECTOR 0
CHK01:
	DEFS	48			; CHECK VECTOR 1
CHK02:
	DEFS	48			; CHECK VECTOR 2
CHK03:
	DEFS	48			; CHECK VECTOR 3
;
; *****
; ***** FLOPPY DISK ALLOCATIONS
; ***** (RESERVE ENOUGH ROOM FOR DSDD DIRECTORY TOO)
; *****
;
ALL00:
	DEFS	62			; ALLOCATION VECTOR 0
ALL01:
	DEFS	62			; ALLOCATION VECTOR 1
ALL02:
	DEFS	62			; ALLOCATION VECTOR 2
ALL03:
	DEFS	62			; ALLOCATION VECTOR 3
;
; *****
; ***** USE THIS TABLE FOR FLOPPIES BECAUSE OUR CONTROLLER
; ***** FIRST SECTOR IS 0 NOT 1 LIKE CP/M ASSUMES; THEREFORE,
; ***** SECTOR TRANSLATION IS REQUIRED
; *****
; ***** SKEW FACTOR = 1, NUMBER OF SECTORS = 96 ( 0 - 95 )
; *****
;
XTL00:
	DEFB	00,01,02,03,04,05,06,07,08,09
	DEFB	10,11,12,13,14,15,16,17,18,19
	DEFB	20,21,22,23,24,25,26,27,28,29
	DEFB	30,31,32,33,34,35,36,37,38,39
	DEFB	40,41,42,43,44,45,46,47,48,49
	DEFB	50,51,52,53,54,55,56,57,58,59
	DEFB	60,61,62,63,64,65,66,67,68,69
	DEFB	70,71,72,73,74,75,76,77,78,79
	DEFB	80,81,82,83,84,85,86,87,88,89
	DEFB	90,91,92,93,94,95
;
; *****
; ***** DISK CONTROLLER PARAMETER LIST
; *****
;
FMPLIST:
	DEFS	1		; HEAD/UNIT
	DEFS	1		; TRACK
	DEFS	1		; SECTOR
	DEFB	0		; AUX (DUMMY)
;
	END
