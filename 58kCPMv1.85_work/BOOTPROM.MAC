;
; *****
; ***** ADS CP/M 8 INCH FLOPPY DISK DRIVERS
; ***** TOM DE LELLIS
; ***** 10/1/85
; *****
;
	.Z80
	CSEG
;
FMPLIST	EQU	X'F000'
;
DCTLR1	EQU	X'D8'			; CONTROL/STATUS
DDATA1	EQU	X'D9'			; DATA
;
DSLCT1	EQU	X'CC'			; SELECT CONTROLLER
;
RD	EQU	NOT X'86'		; READ
;
ODAT	EQU	X'01'			; OUTPUT DATA MODE
ORDY	EQU	X'02'			; READY FOR OUTPUT
CBUSY	EQU	X'10'			; CONTROLLER BUSY
IRDY	EQU	X'20'			; READY FOR INPUT
IDAT	EQU	X'40'			; INPUT DATA MODE
ATTN	EQU	X'80'			; ATTENTION
;
SECSIZ	EQU	128			; SECTOR SIZE
;
	.MAIN.::
;
	JP	BOOT
BOOT:
	XOR	A
	OUT	(X'1F'),A
	OUT	(X'3F'),A
	OUT	(X'5F'),A
	OUT	(X'7F'),A
	OUT	(X'9F'),A
	OUT	(X'BF'),A
	OUT	(X'DF'),A
	OUT	(X'FF'),A
;
	LD	SP,X'E000'
;
	LD	HL,FMPLIST
	LD	B,16
LOOP:
	LD	(HL),0
	INC	HL
	DJNZ	LOOP
;
	CALL	FLOGIN
	LD	HL,0
	CALL	FREAD
	JR	NC,BOOT
	CALL	FREAD
	JR	NC,BOOT
;
	JP	0
;
; *****
; ***** SELECT CONTROLLER
; *****
;
FLOGIN:
	LD	A,1
	OUT	(DSLCT1),A		; SET IT
	OUT	(X'CE'),A
FLOGIN2:
	IN	A,(DCTLR1)		; DISK STATUS
	AND	CBUSY			; BUSY?
	JR	NZ,FLOGIN2		; JUMP IF SO
	RET				; EXIT
;
; *****
; ***** READ SECTOR
; *****
;
FREAD:
	LD	B,RD			; READ COMMAND
	CALL	CMD			; START READ
	LD	B,SECSIZ		; PUT SECTOR SIZE INTO B
DRDIL:
	IN	A,(DCTLR1)		; GET STATUS BYTE
	CPL				; INVERT DATA
	AND	ATTN+IDAT		; CHECK ATTN OR IDAT
	JR	Z,DRDIL			; IF BOTH NEITHER ARE SET, SEE DRDIL
	AND	ATTN			; IS IT ATTN
	JR	NZ,DRDIL1		; IF SO, EXIT
	IN	A,(DDATA1)		; READ BYTE OF DATA
	CPL				; SIGNALS ARE TRUE WHEN LOW SO INVERT
	LD	(HL),A			; AND MOVE DATA TO MEMORY
	INC	HL			; INCREMENT MEMORY POINTER
	DJNZ	DRDIL			; GET REST OF SECTOR
	CALL	CMDTRM			; STOP CONTROLLER
DRDIL1:
	CALL	WAIT			; GET STATUS
	RET
;
; *****
; ***** COMMAND TERMINATION
; *****
;
CMDTRM:
	IN	A,(DCTLR1)		; GET STATUS
	AND	ORDY			; WAIT FOR ORDY
	JR	NZ,CMDTRM		; IF OUPUT BUFFER FULL, WAIT
	LD	A,X'FF'			; LOAD TERMINATE
	OUT	(DCTLR1),A		; SEND TERM BYTE
	RET				; EXIT
;
; *****
; ***** SEND COMMAND TO CONTROLLER
; *****
;
CMD:
	PUSH	HL
	CALL	WAITO			; WAIT FOR OUTPUT READY
	LD	A,B			; GET COMMAND
	OUT	(DCTLR1),A		; SEND COMMAND TO CONTROLLER
	LD	B,4			; NUMBER OF PARAMETERS
	LD	HL,FMPLIST		; START OF PARAM LIST
CM10:
	CALL	WAITO			; WAIT FOR OUTPUT READY
	LD	A,(HL)			; GET PARAMETER
	CPL				; INVERT
	OUT	(DDATA1),A		; PASS IT
	INC	HL			; NEXT PARAMETER
	DJNZ	CM10			; PROCESS NEXT PARAMETER
	LD	A,(FMPLIST+X'02')
	INC	A
	LD	(FMPLIST+X'02'),A	; STORE SECTOR
	POP	HL
	RET				; DONE, RETURN TO CALLER
;
; *****
; ***** WAIT FOR OUTPUT READY
; *****
;
WAITO:
	IN	A,(DCTLR1)		; GET STATUS
	AND	ORDY			; WAIT FOR ORDY
	JR	NZ,WAITO		; JUMP IF NOT READY
	RET				; EXIT
;
; *****
; ***** WAIT FOR COMMAND COMPLETION
; *****
;
WAIT:
	IN	A,(DCTLR1)		; GET STATUS
	AND	CBUSY			; BUSY?
	JR	NZ,WAIT			; WAIT IF SO
WAIT1:
	IN	A,(DCTLR1)		; GET STATUS AGAIN
	AND	IRDY			; IRDY?
	JR	NZ,WAIT1		; JUMP IF NOT READY
	IN	A,(DDATA1)		; READ TERM STATUS
	CPL				; INVERT
	CP	2			; 0,1 OK
	RET				; EXIT
;
	END
