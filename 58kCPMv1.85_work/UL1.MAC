;
; *****
; ***** UL1 XON/XOFF SERIAL PRINTER DRIVER
; ***** TOM DE LELLIS
; ***** 11/10/84
; *****
;
	.Z80
	CSEG
;
	PUBLIC	UL1ST
	PUBLIC	XRDY
	PUBLIC	UL1OUT
;
	EXTRN	NULTABS
	EXTRN	DLYCHR
;
SIO2DAT	EQU	X'C4'			; SIO2 DATA I/O PORT
SIO2STA	EQU	X'C5'			; SIO2 STATUS PORT
;
TXRDY	EQU	X'01'			; XMTR BUFFER EMPTY BIT
RXRDY	EQU	X'02'			; RCVR BUFFER FULL BIT
;
XON	EQU	X'11'			; ASCII XON
XOFF	EQU	X'13'			; ASCII XOFF
;
BS	EQU	X'08'			; BACKSPACE
TAB	EQU	X'09'			; TAB
LF	EQU	X'0A'			; LINE FEED
FF	EQU	X'0C'			; FORM FEED
CR	EQU	X'0D'			; CARRIAGE RETURN
;
FALSE	EQU	X'00'
TRUE	EQU	NOT FALSE
;
; *****
; ***** GET OUTPUT STATUS
; *****
;
UL1ST:
	LD	A,(XRDY)		; GET READY TO SEND FLAG
	OR	A			; READY?
	JR	Z,CHKXOFF		; IF, NOT JUMP
UL1ST1:
	CALL	CHKXOFF			; CHECK IF PRINTER SENT XOFF
	LD	A,(XRDY)		; GET RESULTS OF CHECK
	OR	A			; IS IT BUSY
	RET	Z			; IF SO, EXIT
	IN	A,(SIO2STA)		; GET STATUS
	AND	TXRDY			; READY TO SEND?
	RET	Z			; EXIT IF NOT
	LD	A,TRUE			; ELSE LOAD TRUE
	RET				; RETURN
CHKXOFF:
	IN	A,(SIO2STA)		; GET STATUS
	AND	RXRDY			; WAS DATA RECEIVED?
	RET	Z			; IF NOT, EXIT
	IN	A,(SIO2DAT)		; ELSE GET DATA
	AND	X'7F'			; STRIP ANY PARITY
	CP	XOFF			; WAS IT XOFF?
	JR	Z,XOFF1			; IF SO, SEE XOFF1
	CP	XON			; WAS IT XON?
	JR	Z,XON1			; IF SO, SEE XON1
	LD	A,(XRDY)		; LOAD PREVIOUS FLAG
	RET				; EXIT
XOFF1:
	XOR	A			; LOAD A PRINTER BUSY
	JR	STORX			; JUMP TO STORER
XON1:
	LD	A,TRUE			; LOAD A PRINTER NOT BUSY
STORX:
	LD	(XRDY),A		; STORE IT
	RET				; EXIT
;
; *****
; ***** OUTPUT DATA
; *****
;
UL1OUT:
	CALL	UL1ST			; GET STATUS
	OR	A			; ARE WE READY
	JR	Z,UL1OUT		; IF NOT, WAIT
	LD	A,C			; ELSE GET CHARACTER TO SEND
	OUT	(SIO2DAT),A		; SEND IT
;
	LD	HL,CHKCHR		; CHARACTERS THAT NEED NULLS
	LD	BC,CHKLEN		; NUMBER OF CHARACTERS TO CHECK
	CPIR				; LOOK FOR CHARACTER LAST SENT IN TBL
	RET	NZ			; EXIT IF NOT FOUND
	LD	HL,NULTABS		; NULL TABLE
	ADD	HL,BC			; ADD OFFSET TO GET NUMBER OF NULLS
	LD	A,(HL)			; GET NUMBER OF NULLS
	OR	A			; CHECK IF ANY NULLS
	RET	Z			; EXIT IF NONE
	LD	B,A			; INTO B FOR INDEX
;
DONULS:
	CALL	UL1ST			; CHECK STATUS
	OR	A			; READY TO SEND?
	JR	Z,DONULS		; LOOP IF NOT
	LD	A,(DLYCHR)		; GET NULL CHARACTER
	OUT	(SIO2DAT),A		; SEND IT
	DJNZ	DONULS			; UNTIL NO MORE TO SEND
	RET				; EXIT
;
; *****
; ***** UL1 DRIVER DATA
; *****
;
	DSEG
;
XRDY:
	DEFB	TRUE
;
CHKCHR:
	DEFB	CR,FF,LF,TAB,BS		; MUST BE REVERSE ORDER FROM PAD TABLE
CHKLEN	EQU	$-CHKCHR
;
	END
